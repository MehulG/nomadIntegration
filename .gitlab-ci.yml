cache:
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
stages:
  - test
  # - build
  - dockerize
  - deploy


# frontend-test:
#   image: zenika/alpine-chrome:with-node
#   stage: test
#   script:
#     - cd client
#     - npm install
#     - npm run test-headless
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}
#     paths:
#       - node_modules/
#     policy:
#       push
#   tags:
#     - cgi-w3
backend-test:
  image: microsoft/dotnet:2.2-sdk
  stage: test
  script:
    - cd ./server/Api.Tests
    - dotnet test
  tags:
    - cgi-w3
# frontend-build:
#   image: node:lts-alpine
#   stage: build
#   script:
#     - cd client
#     - npm build
#   cache:
#     key: ${CI_COMMIT_REF_SLUG}
#     paths:
#       - node_modules/
#     policy: pull
#   tags:
#     - cgi-w3
# backend-build:
#   image: microsoft/dotnet:2.2-sdk
#   stage: build
#   script:
#     - cd ./server/Api
#     - dotnet build
#   tags:
#     - cgi-w3
dockerize-stage:
  stage: dockerize
  image: docker
  only:
    - account
    - development
  script:
    # - echo $DOCKER_PASSWORD
    - docker login --username hebopile --password secret@1234

    - docker build -t codebit/codebit_client:${CI_COMMIT_SHORT_SHA} client
    - docker tag codebit/codebit_client:${CI_COMMIT_SHORT_SHA} codebit/codebit_client:${CI_COMMIT_SHORT_SHA}
    - docker push codebit/codebit_client:${CI_COMMIT_SHORT_SHA}
    - docker tag codebit/codebit_client:${CI_COMMIT_SHORT_SHA} codebit/codebit_client:latest
    - docker push codebit/codebit_client:latest

    - docker build -t codebit/codebit_account:${CI_COMMIT_SHORT_SHA} server
    - docker tag codebit/codebit_account:${CI_COMMIT_SHORT_SHA} codebit/codebit_account:${CI_COMMIT_SHORT_SHA}
    - docker push codebit/codebit_account:${CI_COMMIT_SHORT_SHA}
    - docker tag codebit/codebit_account:${CI_COMMIT_SHORT_SHA} codebit/codebit_account:latest
    - docker push codebit/codebit_account:latest  
  tags:
    - cgi-w3
deploy:
  stage: deploy
  image: dtzar/helm-kubectl
  only:
    - development
    - account
  script:
    - kubectl config set-cluster k8s --server https://api.cgi-w3.stackroute.io
    - kubectl config set clusters.k8s.certificate-authority-data $CERTIFICATE_AUTHORITY_DATA
    - kubectl config set-credentials mashup-deployer
    - kubectl config set users.mashup-deployer.client-certificate-data $CLIENT_CERTIFICATE_DATA
    - kubectl config set users.mashup-deployer.client-key-data $CLIENT_KEY_DATA
    - kubectl config set-context mashup-context --cluster=k8s --user=mashup-deployer --namespace=mashup
    - kubectl config use-context mashup-context

    
    - cd ./client/k8s
    - kubectl apply -f .
    - cd ../../server/k8s
    - kubectl apply -f .
  tags:
    - cgi-w3